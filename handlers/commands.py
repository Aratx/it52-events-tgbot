from aiogram import types
from aiogram.filters import Command
from keyboards.events_keyboards import build_status_keyboard
from storage.user_storage import set_user_status

async def cmd_start(message: types.Message):
    await message.answer(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π IT52.\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /events –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ IT-–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –≤ –ù–∏–∂–Ω–µ–º –ù–æ–≤–≥–æ—Ä–æ–¥–µ"
    )

async def cmd_events(message: types.Message):
    set_user_status(message.from_user.id, "future")
    await message.answer(
        "üìÖ –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π:",
        reply_markup=build_status_keyboard()
    )

def register_commands(dp):
    dp.message.register(cmd_start, Command("start"))
    dp.message.register(cmd_events, Command("events"))